---
import LinearGradientText from "../components/LinearGradientText.astro";
import PokeTheLadybug from "../microgames/PokeTheLadybug.astro";
import PopTheBalloon from "../microgames/PopTheBalloon.astro";

const collection = [
	{
		Component: PokeTheLadybug,
		backgroundColor: "hsl(356 89 71)",
		borderColor: "hsl(153 24 77)",
	},
	{
		Component: PopTheBalloon,
		backgroundColor: "hsl(46 93 56)",
		borderColor: "hsl(41 100 47)",
	},
];
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/icon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>DIY</title>
	</head>
	<body>
		<LinearGradientText />

		<main>
			{
				collection.map(({ Component, backgroundColor, borderColor }) => (
					<article
						style={`--background-color: ${backgroundColor}; --border-color: ${borderColor}`}
					>
						<Component />
					</article>
				))
			}
		</main>
	</body>
</html>

<style is:global>
	body {
		margin: 0;
	}

	main {
		block-size: 100svb;
		overflow-y: scroll;
		scroll-snap-type: y mandatory;

		article {
			scroll-snap-align: start;
		}
	}

	article {
		block-size: inherit;
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: var(--background-color, inherit);
		--_border-color: var(--border-color, currentColor);

		> svg {
			display: block;
			inline-size: 90vmin;
			max-inline-size: 36rem;
			block-size: auto;
			border-radius: 0.25rem;
			box-shadow:
				0 -1rem 1rem hsl(209 61 16 / 0.15),
				0 0 0 0.1rem currentColor,
				0 0 0 1rem var(--_border-color),
				0 0 0 1.15rem currentColor;
		}
	}
</style>
