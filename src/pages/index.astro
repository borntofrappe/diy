---
import LinearGradientText from "../components/LinearGradientText.astro";
import PokeTheLadybug from "../microgames/PokeTheLadybug.astro";
import PopTheBalloon from "../microgames/PopTheBalloon.astro";
import FindTheButterflies from "../microgames/FindTheButterflies.astro";
import CrackTheEgg from "../microgames/CrackTheEgg.astro";
import BattleTheEnemy from "../microgames/BattleTheEnemy.astro";
import SmashTheRabbits from "../microgames/SmashTheRabbits.astro";
import FightTheEnemy from "../microgames/FightTheEnemy.astro";
import TakeAPicture from "../microgames/TakeAPicture.astro";
import PickASide from "../microgames/PickASide.astro";
import MatchInPairs from "../microgames/MatchInPairs.astro";
import PickUpProduce from "../microgames/PickUpProduce.astro";
import KeepTheSecret from "../microgames/KeepTheSecret.astro";
import CatchTheFish from "../microgames/CatchTheFish.astro";
import TimeTheShots from "../microgames/TimeTheShots.astro";

const collection: Array<{
  Component: (_props: Record<string, any>) => any;
  backgroundColor: string;
  borderColor: string;
}> = [
  {
    Component: PokeTheLadybug,
    backgroundColor: "hsl(356 89 71)",
    borderColor: "hsl(153 24 77)",
  },
  {
    Component: PopTheBalloon,
    backgroundColor: "hsl(46 93 56)",
    borderColor: "hsl(41 100 47)",
  },
  {
    Component: FindTheButterflies,
    backgroundColor: "hsl(211 67 48)",
    borderColor: "hsl(172 76 41)",
  },
  {
    Component: CrackTheEgg,
    backgroundColor: "hsl(60 91 66)",
    borderColor: "hsl(171 83 39)",
  },
  {
    Component: BattleTheEnemy,
    backgroundColor: "hsl(119 30 49)",
    borderColor: "hsl(164 16 32)",
  },
  {
    Component: SmashTheRabbits,
    backgroundColor: "hsl(39 91 55)",
    borderColor: "hsl(143 99 32)",
  },
  {
    Component: FightTheEnemy,
    backgroundColor: "hsl(152 23 13)",
    borderColor: "hsl(40 25 42)",
  },
  {
    Component: TakeAPicture,
    backgroundColor: "hsl(120 1 84)",
    borderColor: "hsl(247 6 27)",
  },
  {
    Component: PickASide,
    backgroundColor: "hsl(36 93 56)",
    borderColor: "hsl(23 100 37)",
  },
  {
    Component: MatchInPairs,
    backgroundColor: "hsl(19 83 47)",
    borderColor: "hsl(142 100 31)",
  },
  {
    Component: PickUpProduce,
    backgroundColor: "hsl(30 95 72)",
    borderColor: "hsl(176 67 53)",
  },
  {
    Component: KeepTheSecret,
    backgroundColor: "hsl(0 0 0)",
    borderColor: "hsl(0 0 0)",
  },
  {
    Component: CatchTheFish,
    backgroundColor: "hsl(0 0 97)",
    borderColor: "hsl(210 100 35)",
  },
  {
    Component: TimeTheShots,
    backgroundColor: "hsl(209 61 16)",
    borderColor: "hsl(285 80 68)",
  },
];
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/icon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>DIY</title>
    <meta
      name="description"
      content="Play a collection of touch-based games, crafted with care and animated, scalable vector graphics."
    />
  </head>
  <body>
    <LinearGradientText />

    <main>
      {
        collection.map(({ Component, backgroundColor, borderColor }) => (
          <article
            style={`--background-color: ${backgroundColor}; --border-color: ${borderColor}`}
          >
            <Component />
          </article>
        ))
      }
    </main>
  </body>
</html>

<style is:global>
  body {
    margin: 0;
  }

  main {
    block-size: 100svb;
    overflow-y: scroll;
    scroll-snap-type: y mandatory;

    article {
      scroll-snap-align: start;
    }
  }

  article {
    block-size: inherit;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--background-color, inherit);
    --_border-color: var(--border-color, currentColor);

    > svg {
      display: block;
      inline-size: 90vmin;
      max-inline-size: 36rem;
      block-size: auto;
      border-radius: 0.25rem;
      box-shadow:
        0 -1rem 1rem hsl(209 61 16 / 0.15),
        0 0 0 0.1rem currentColor,
        0 0 0 1rem var(--_border-color),
        0 0 0 1.15rem currentColor;
    }
  }
</style>
